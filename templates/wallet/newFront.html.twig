{% extends 'baseFront.html.twig' %}

{% block body %}


<!-- Navbar & Hero Start -->
			
				
				
<div class="container-xxl bg-primary hero-header" ></div>
	
				
			
			<!-- Navbar & Hero End -->

        <!-- Contact Start -->
        <div class="container-xxl py-5">
            <div class="container py-5 px-lg-5">

                <div class="wow fadeInUp" data-wow-delay="0.1s">
                    <p class="section-title text-secondary justify-content-center"><span></span>Wallet<span></span></p>
                    <h1 class="text-center mb-5">Ajouter Wallet</h1>
                </div>
                <div class="row justify-content-center">
                    <div class="col-lg-7">
                        <div class="wow fadeInUp" data-wow-delay="0.3s">
                            















<div class="row g-3">
            {{ form_start(form, {'attr': {'class': 'form-horizontal', 'novalidate': 'novalidate', 'id': 'walletForm'}}) }}






                                        
     <div class="row">
    <div class="col-md-6">
        <div class="form-floating mb-3">
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text">Date</span>
                </div>
                {{ form_widget(form.date_c) }}
            </div>
                
        </div>
    </div>

    <div class="flex mt-6 text-sm">
    <label class="flex items-center dark:text-gray-400">
        {{ form_widget(form.status, {attr: {style: 'display: none;'}}) }}
        <span class="ml-2">
            Status :
            <span class="underline">Not Verified</span>
        </span>
    </label>
</div>




    <div class="col-md-6">
        <div class="form-floating mb-3">
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text">Balance</span>
                </div>
                {{ form_widget(form.balance, {'id': 'balanceInput'})}}
            </div>
             <span id="balanceError" class="text-xs text-red" style="red;"></span>
        </div>
    </div>
    <script>
    // Désactiver le champ balance lors du chargement de la page
    document.addEventListener('DOMContentLoaded', function() {
        var balanceInput = document.getElementById('balanceInput');
        balanceInput.setAttribute('readonly', 'readonly');
        balanceInput.style.pointerEvents = 'none';
    });
</script>
</div>
                               



 <div class="col-12">
    <div class="form-floating">
        <label for="utilisateurInput" class="block text-sm"></label>
        {{ form_widget(form.etablissement, {'attr': {'class': 'form-select', 'style': 'background-color: #f8f9fa; color: #6c757d; pointer-events: none'}}) }}
        <span id="utilisateurError" class="text-xs" style="color: red;"></span>
    </div>
</div>



<br>






<div class="col-12">
                                        <button id="submitButton" type="submit" class="btn btn-primary w-100 py-3" disabled>
			{{ button_label|default(' + Add') }}
		</button>
 		<br>
		{{ form_end(form) }}
	</div>
    </div>

	




                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Contact End -->
        
<script>
    document.addEventListener("DOMContentLoaded", function() {
        var balanceInput = document.getElementById('balanceInput');
        var balanceError = document.getElementById('balanceError');
        var submitButton = document.getElementById('submitButton');

        // Fonction de validation de la balance
        function validateBalance() {
            var balanceValue = parseFloat(balanceInput.value);
            if (balanceInput.value === '' || isNaN(balanceValue) || balanceValue < 0) {
                // Vérifier si le champ de balance est vide ou si la valeur n'est pas numérique ou positive
                balanceError.textContent = 'Veuillez saisir une valeur numérique positive.';
                balanceInput.style.borderColor = 'red';
                balanceError.style.color = 'red';
                submitButton.disabled = true;
            } else {
                // Si le champ de balance n'est pas vide et que la valeur est numérique et positive
                balanceError.textContent = 'Nombre valide';
                balanceInput.style.borderColor = 'green';
                balanceError.style.color = 'green';
                submitButton.disabled = false;
            }
        }

        // Appeler la fonction de validation de la balance au chargement de la page
        validateBalance();

        // Ajouter un écouteur d'événements pour le champ de balance
        balanceInput.addEventListener('input', validateBalance);
    });
</script>

{% endblock %}