{% extends 'baseFront.html.twig' %}

{% block body %}


<!-- Navbar & Hero Start -->
			
				
				
				<div class="container-xxl bg-primary hero-header">
					
				</div>
			
			<!-- Navbar & Hero End -->

        <!-- Contact Start -->
        <div class="container-xxl py-5">
            <div class="container py-5 px-lg-5">

                <div class="wow fadeInUp" data-wow-delay="0.1s">
                    <p class="section-title text-secondary justify-content-center"><span></span>Etablissement<span></span></p>
                    <h1 class="text-center mb-5">Modifier Etablissement</h1>
                </div>
                <div class="row justify-content-center">
                    <div class="col-lg-7">
                        <div class="wow fadeInUp" data-wow-delay="0.3s">
                            















<div class="row g-3">
		{{ form_start(form, {'attr': {'class': 'form-horizontal', 'novalidate': 'novalidate', 'id': 'etablissementForm'}}) }}






                                        
     <div class="row">
    <div class="col-md-6">
        <div class="form-floating mb-3">
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text">Nom</span>
                </div>
                {{ form_widget(form.nom, {'id': 'nomInput', 'attr': {'class': 'form-control'}}) }}
            </div>
            <span id="nomError" class="text-xs" style="color: red;"></span>
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-floating mb-3">
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text">Lieu</span>
                </div>
                {{ form_widget(form.lieu, {'id': 'lieuInput', 'attr': {'class': 'form-control'}}) }}
            </div>
            <span id="lieuError" class="text-xs" style="color: red;"></span>
        </div>
    </div>
</div>
                               







<div class="col-12">
    <div class="form-floating mb-3">
        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text">Code</span>
            </div>
            {{ form_widget(form.code_etablissement, {'id': 'code_etablissementInput', 'attr': {'class': 'form-control'}}) }}
        </div>
        <span id="code_etablissementError" class="text-xs" style="color: red;"></span>
    </div>
</div>





<div class="col-12">
    <div class="card mb-3">
        <div class="card-body">
            <div class="input-group">
                <div class="input-group-prepend">
                    <label for="type_etablissementInput" class="input-group-text">Type</label>
                </div>
                {{ form_widget(form.type_etablissement, {'id': 'type_etablissementInput', 'class': 'form-control'}) }}
            </div>
            <span id="type_etablissementError" class="text-xs" style="color: red;"></span>
        </div>
    </div>
</div>










	

	<div class="col-12">
    <div class="card mb-3">
        <div class="card-body">
            <label class="block text-sm">Image</label>
            <div class="px-4 py-3 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800">
                <div class="relative flex items-center">
                    <!-- Bouton Import -->
                    <button type="button" class="btn btn-primary w-5 py-2" onclick="document.getElementById('fileInput').click();">
                        Import
                    </button>

                    <!-- Input de sélection de fichier -->
                    {{ form_widget(form.image, {'id': 'fileNameInput', 'attr': {'class': 'w-full pl-2 py-1 text-sm dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input', 'title': ''}}) }}

                    <!-- Input caché de type file -->
                    <input type="file" id="fileInput" class="hidden" onchange="updateFileName(event)"/>

                    <!-- Script pour mettre à jour le nom du fichier sélectionné -->
                    <script>
                        function updateFileName(event) {
                            const input = document.getElementById('fileNameInput');
                            input.value = event.target.files[0].name;
                            input.placeholder = '';
                        }
                    </script>
                </div>
                <span id="imageError" class="text-xs" style="color: red;"></span>
            </div>
        </div>
    </div>
</div>
<style>
    /* Masquer le texte du bouton */
    #fileInput::-webkit-file-upload-button {
        visibility: hidden;
    }
</style>






 <div class="col-12">
    <div class="form-floating">
        <label for="utilisateurInput" class="block text-sm"></label>
        {{ form_widget(form.utilisateur, {'id': 'utilisateurInput', 'attr': {'class': 'form-select'}}) }}
        <span id="utilisateurError" class="text-xs" style="color: red;"></span>
    </div>
</div>
<br>






<div class="col-12">
                                        <button id="submitButton" type="submit" class="btn btn-primary w-100 py-3">
			{{ button_label|default(' + Update') }}
		</button>
 		<br>
		{{ form_end(form) }}
	</div>
    </div>

	




                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Contact End -->
        
<script>
		// Fonction de validation du formulaire
function validateForm() {
let nom = document.getElementById('nomInput').value.trim();
let lieu = document.getElementById('lieuInput').value.trim();
let codeEtablissement = document.getElementById('code_etablissementInput').value.trim();

let typeEtablissementInput = document.getElementById('type_etablissementInput');
let typeEtablissementRadios = typeEtablissementInput.querySelectorAll('input[type="radio"]');

let image = document.getElementById('fileNameInput').value.trim();
let utilisateur = document.getElementById('utilisateurInput').value;

let nomError = document.getElementById('nomError');
let lieuError = document.getElementById('lieuError');
let codeEtablissementError = document.getElementById('code_etablissementError');
let typeEtablissementError = document.getElementById('type_etablissementError');
let imageError = document.getElementById('imageError');
let utilisateurError = document.getElementById('utilisateurError');

// Expression régulière pour valider que le champ ne contient que des lettres et des espaces
let letterOnlyRegex = /^[A-Za-z\s]+$/;

// Validation du champ nom
if (nom === '') {
nomError.textContent = 'Nom is required';
return false;
} else if (! letterOnlyRegex.test(nom)) {
nomError.textContent = 'Nom doit contenir uniquement des lettres';
return false;
} else {
nomError.textContent = '';
}

// Validation du champ lieu
if (lieu === '') {
lieuError.textContent = 'Lieu is required';
return false;
} else if (! letterOnlyRegex.test(lieu)) {
lieuError.textContent = 'Lieu doit contenir uniquement des lettres';
return false;
} else {
lieuError.textContent = '';
}

if (codeEtablissement === '') {
codeEtablissementError.textContent = 'Code is required';
return false;
} else {
if (!/^\d{4}$/.test(codeEtablissement)) {
codeEtablissementError.textContent = 'Code Etablissement doit contenir exactement quatre chiffres';
return false;
} else {
codeEtablissementError.textContent = '';
}
}

let typeEtablissementSelected = false;
for (let i = 0; i < typeEtablissementRadios.length; i++) {
if (typeEtablissementRadios[i].checked) {
typeEtablissementSelected = true;
break;
}
}

if (! typeEtablissementSelected) {
typeEtablissementError.textContent = 'Type is required';
return false;
} else {
typeEtablissementError.textContent = '';
}


if (image === '') {
imageError.textContent = 'image is required';
return false;
} else {
imageError.textContent = '';
}


if (utilisateur === '') {
utilisateurError.textContent = 'Utilisateur is required';
return false;
} else {
utilisateurError.textContent = '';
}


// Si toutes les validations passent, retourne true pour soumettre le formulaire
return true;
}

// Attachez l'événement de soumission du formulaire à la fonction de validation
document.getElementById('etablissementForm').addEventListener('submit', function (event) {
if (! validateForm()) { // Empêche la soumission du formulaire si la validation échoue
event.preventDefault();
}
});
	</script>


	{% for message in app.flashes('error') %}
		<script>
			// alert("{{ message }}");
let codeEtablissementError = document.getElementById('code_etablissementError');
codeEtablissementError.textContent = 'This Code is Already Taken';
		</script>
	{% endfor %}


{% endblock %}