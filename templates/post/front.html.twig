{% extends 'baseFront.html.twig' %}
{% block title %}Etablissement index
{% endblock %}


{% block publication %}
	<!-- Team Start -->
	<div class="container-xxl py-5">
		<div class="container py-5 px-lg-5">
			<div class="wow fadeInUp" data-wow-delay="0.1s">
				<p class="section-title text-secondary justify-content-center">
					<span></span>---<span></span>
				</p>
				<h1 class="text-center mb-5">Posts</h1>
				
			</div>
			
			<div class="row g-4">

<a href="{{ path('app_post_newFront') }}">Create new +</a>

    
{% for postAndComment in postsAndComments %}

			
				<div class="col-lg-4 col-md-6 wow fadeInUp" data-wow-delay="0.1s">
					<div class="team-item bg-light rounded">
						<div class="text-center border-bottom " style="margin-bottom: 10px;">
							<div style="overflow: hidden;">
								<br>
								<div style="float: left; margin-right: 10px;">

									<img class="img-fluid rounded-circle mb-4" src="{{ asset('images/' ~ postAndComment.post.getUtilisateur().getImage()) }}" alt="" style="width: 50px; height: 50px;">

								</div>
								<div style="float: left;">
									<h5 style="text-align: left;">{{ postAndComment.post.getUtilisateur().getNom()}}</h5>
									<span id="datePublication" >{# publié le  {{ postAndComment.post.date ? postAndComment.post.date|date('Y-m-d H:i:s') : ''  }} #}</span>
								
								
								
								
								
								
{#/*datepost*/#}
<script>
        var datePublication = "{{ postAndComment.post.date ? postAndComment.post.date|date('Y-m-d H:i:s') : ''  }}";
        var datePublicationObj = new Date(datePublication);
        var dateActuelle = new Date();
        var difference = dateActuelle - datePublicationObj;
        var differenceEnMinutes = Math.floor(difference / 60000);
        var texteAffiche;
        if (differenceEnMinutes < 1) {
            texteAffiche = "publié à l'instant";
        } else if (differenceEnMinutes < 60) {
            texteAffiche = "publié il y a " + differenceEnMinutes + " minute(s)";
        } else if (differenceEnMinutes < 1440) {
            texteAffiche = "publié il y a " + Math.floor(differenceEnMinutes / 60) + " heure(s)";
        } else if (differenceEnMinutes < 43200) {
            texteAffiche = "publié il y a " + Math.floor(differenceEnMinutes / 1440) + " jour(s)";
        } else if (differenceEnMinutes < 43200 * 30) {
            texteAffiche = "publié il y a " + Math.floor(differenceEnMinutes / (1440 * 30)) + " mois";
        } else {
            texteAffiche = "publié il y a plus d'un mois";
        }
        // Update the publication date for this comment
        document.write('<span class="text-right">' + texteAffiche + '</span>');
    </script>

								
								
								
								
								
								</div>

							</div>
						</div>

						<div class="text-center border-bottom " style="margin-bottom: 10px;">
							<div class=" portfolio-item first wow fadeInUp" data-wow-delay="0.1s">
								<div class="rounded overflow-hidden">
									<div class="bg-light p-1">

										<h5 class="lh-base mb-0" style="text-align: left;">
											{{ postAndComment.post.caption }}
										</h5>

									</div>

									<div class="position-relative overflow-hidden">

										<img class="img-fluid w-100" src="{{ asset('imagesOumayma/' ~ postAndComment.post.image) }}" alt="">
										<div class="portfolio-overlay">
											<a class="btn btn-square btn-outline-light mx-1" href="{{ asset('assets/img/' ~ postAndComment.post.image) }}" data-lightbox="portfolio"> {# lezem limage taa star hedha tkoun fel blasa edhika assets/img/ sinon ki tenzel aaleha matloadich  #}
												<i class="fa fa-eye"></i>
											</a>

										</div>
									</div>
									{{postAndComment.post.nbComments}} Comments | {{postAndComment.post.totalReactions}} Reactions
									<br>
								</div>
							</div>
						</div>


						<div class="d-flex justify-content-center border-bottom p-4">



{% if postAndComment.isLikedByUser %}
   <a id="btn" class="btn-square mx-1" href="{{ path('app_post_dislike', {'id_post': postAndComment.post.idPost}) }}">
                                 <i class="far fa-thumbs-up"></i>
                            </a>
                            <style>
 .btn-square {
            transition: transform 0.3s ease;
            color: #fff;
        }

        .btn-square:hover, .hover-active {
            transform: scale(1.1);
            background-color: #8a2be2;
        }

                            </style>
                            <script>
                      window.addEventListener('DOMContentLoaded', (event) => {
        // Récupération de tous les éléments avec la classe btn-square
        const btns = document.querySelectorAll('.btn-square');
        
        // Boucle à travers tous les éléments et ajouter la classe hover-active
        btns.forEach(btn => {
            btn.classList.add('hover-active');
        });
    });
                            </script>
              
{% else %}
   <a id="btn" class=" btn btn-square mx-1" href="{{ path('app_post_like', {'id_post': postAndComment.post.idPost}) }}">
                                 <i class="far fa-thumbs-up"></i>
                            </a>
                            <style>
 .btn-square {
            transition: transform 0.3s ease;
            color: #fff;
        }

        .btn-square:hover, .hover-active {
            transform: scale(1.1);
            background-color: #8a2be2;
        }

                            </style>
                            <script>
                      window.addEventListener('DOMContentLoaded', (event) => {
        
        const btns = document.querySelectorAll('.btn-square');
        
        
        btns.forEach(btn => {
            btn.classList.add('hover-active');
        });
    });
                            </script>
              
{% endif %}
    
			
                            
							{% if postAndComment.post.getUtilisateur().getIdUtilisateur() == idUtilisateurConnecte %}
							
							<a class="btn btn-square mx-1"  href="{{ path('app_post_editfront', {'id_post': postAndComment.post.idPost}) }}">
								<i class="far fa-edit"></i>
							</a>



							

							<form action="{{ path('app_post_deleteFront', {'id_post': postAndComment.post.idPost}) }}" method="post" onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer ce post ?')">
                        <input type="hidden" name="_method" value="DELETE">
                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ postAndComment.post.idPost) }}">
                        <button type="submit" class="btn btn-square btn-outline-light mx-1">
                            <i class="fa fa-trash"></i>
                        </button>
                    </form>

							{% endif %}
							<a class="btn btn-square mx-1"  href="{{ path('app_commentaire_newFront', {'id_post': postAndComment.post.idPost}) }}">
								<i class="far fa-comment"></i>
							</a>
							<a class="btn btn-square mx-1"  href="#">
								<i class="fas fa-bullhorn"></i>

							</a>

						</div>



<div class="d-flex justify-content-center p-4 flex-column">
<h5 class="d-flex justify-content-center" >Commentaires:</h5>

 {% if postAndComment.comments %}
 {% for commentIndex, comment in postAndComment.comments %}
  <div class="card mb-3">
    <div class="card-body d-flex align-items-center">
        <!-- Ajoutez l'image de l'utilisateur ici avec une classe pour la styliser -->
        <img class="user-image mr-2" src="{{ asset('images/' ~ comment.getUtilisateur().getImage()) }}" alt="User Image">
        
        <h5 class="card-title mb-0">{{ comment.getUtilisateur().getNom() }}</h5>
		<!-- Espace pour aligner les éléments à droite -->
        
		<div class="card-body d-flex justify-content-end">
                        <span id="dateCommentaire_{{ postAndComment.post.idPost }}_{{ commentIndex }}" class="text-right">
{#publié le {{ comment.getDateCo() ? comment.getDateCo()|date('Y-m-d') : '' }}#}
</span>

  <script>
            // Récupérer la date de publication du commentaire
            var datePublication{{ postAndComment.post.idPost }}_{{ commentIndex }} = "{{ comment.getDateCo() ? comment.getDateCo()|date('Y-m-d H:i:s') : '' }}";

            // Convertir la date de publication en objet Date
            var datePublicationObj{{ postAndComment.post.idPost }}_{{ commentIndex }} = new Date(datePublication{{ postAndComment.post.idPost }}_{{ commentIndex }});

            // Obtenir la date actuelle
            var dateActuelle{{ postAndComment.post.idPost }}_{{ commentIndex }} = new Date();

            // Calculer la différence en millisecondes entre les deux dates
            var difference{{ postAndComment.post.idPost }}_{{ commentIndex }} = dateActuelle{{ postAndComment.post.idPost }}_{{ commentIndex }} - datePublicationObj{{ postAndComment.post.idPost }}_{{ commentIndex }};

            // Convertir la différence en jours
            var differenceEnJours{{ postAndComment.post.idPost }}_{{ commentIndex }} = Math.floor(difference{{ postAndComment.post.idPost }}_{{ commentIndex }} / (1000 * 60 * 60 * 24));

            // Déterminer le texte à afficher en fonction de la différence en jours
            var texteAffiche{{ postAndComment.post.idPost }}_{{ commentIndex }};
            if (differenceEnJours{{ postAndComment.post.idPost }}_{{ commentIndex }} < 1) {
                texteAffiche{{ postAndComment.post.idPost }}_{{ commentIndex }} = "publié aujourd'hui";
            } else if (differenceEnJours{{ postAndComment.post.idPost }}_{{ commentIndex }} === 1) {
                texteAffiche{{ postAndComment.post.idPost }}_{{ commentIndex }} = "publié hier";
            } else if (differenceEnJours{{ postAndComment.post.idPost }}_{{ commentIndex }} < 30) {
                texteAffiche{{ postAndComment.post.idPost }}_{{ commentIndex }} = "publié il y a " + differenceEnJours{{ postAndComment.post.idPost }}_{{ commentIndex }} + " jour(s)";
            } else {
                var differenceEnMois{{ postAndComment.post.idPost }}_{{ commentIndex }} = Math.floor(differenceEnJours{{ postAndComment.post.idPost }}_{{ commentIndex }} / 30);
                if (differenceEnMois{{ postAndComment.post.idPost }}_{{ commentIndex }} === 1) {
                    texteAffiche{{ postAndComment.post.idPost }}_{{ commentIndex }} = "publié il y a 1 mois";
                } else {
                    texteAffiche{{ postAndComment.post.idPost }}_{{ commentIndex }} = "publié il y a " + differenceEnMois{{ postAndComment.post.idPost }}_{{ commentIndex }} + " mois";
                }
            }

            // Afficher le texte calculé dans le span
            document.getElementById('dateCommentaire_{{ postAndComment.post.idPost }}_{{ commentIndex }}').innerText = texteAffiche{{ postAndComment.post.idPost }}_{{ commentIndex }};
        </script>










</div>
    </div>
    <div class="card-body mt-0 pt-0">
        <p class="card-text">{{ comment.DescriptionCo() }}</p>
    </div>
	  

{% if comment.getUtilisateur().getIdUtilisateur() == idUtilisateurConnecte %}
	<div class="d-flex align-items-center">
    <a class="btn btn-square mx-1" href="{{ path('app_commentaire_editFront', {'id_commentaire': comment.getIdCommentaire}) }}">
        <i class="far fa-edit"></i>
    </a>

    <form action="{{ path('app_commentaire_deleteFront', {'id_commentaire': comment.getIdCommentaire}) }}" method="post" onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer ce wallet ?')" class="ml-2">
        <input type="hidden" name="_method" value="DELETE">
        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ comment.getIdCommentaire) }}">
        <button type="submit" class="btn btn-square btn-outline-light mx-1">
            <i class="fa fa-trash"></i>
        </button>
    </form>
</div>


					{% endif %}

</div>



   {% endfor %}
    {% else %}
	<div class="card mb-3">
        <div class="card-body">
            
            <p class="card-text"> pas de commentaire a afficher </p>
        </div>
    </div>
   {% endif %}
</div>
</div>
				</div>

{% endfor %}

</div>
		</div>
	</div>
	<!-- Team End -->


<style>
	.user-image {
    width: 30px; /* ajustez la largeur selon vos besoins */
    height: 30px; /* ajustez la hauteur selon vos besoins */
    border-radius: 50%; /* pour rendre l'image circulaire */
    margin-right: 10px; /* espace entre l'image et le texte */
    /* Ajoutez d'autres styles pour styliser l'image comme une icône */
}
</style>

{% for message in app.flashes('error') %}
		<script>
			 alert("{{ message }}");
		</script>
	{% endfor %}


{% endblock %}