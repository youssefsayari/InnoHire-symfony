{% extends 'baseFront.html.twig' %}

{% block body %}


<!-- Navbar & Hero Start -->
			<div class="container-xxl position-relative p-0">
				<nav class="navbar navbar-expand-lg navbar-light px-4 px-lg-5 py-3 py-lg-0">
					<a href="" class="navbar-brand p-0">
						<h1 class="m-0">
							DGital

						</h1>
						<!-- <img src="img/logo.png" alt="Logo"> -->
					</a>
					<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse">
						<span class="fa fa-bars"></span>
					</button>
					<div class="collapse navbar-collapse" id="navbarCollapse">
						<div class="navbar-nav mx-auto py-0">
							<a href="index.html" class="nav-item nav-link active">
								Home

							</a>
							<a href="about.html" class="nav-item nav-link">
								About

							</a>
							<a href="service.html" class="nav-item nav-link">
								Service

							</a>
							<a href="project.html" class="nav-item nav-link">
								Project

							</a>
							<div class="nav-item dropdown">
								<a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown">
									Pages

								</a>
								<div class="dropdown-menu m-0">
									<a href="team.html" class="dropdown-item">
										Our Team

									</a>
									<a href="testimonial.html" class="dropdown-item">
										Testimonial

									</a>
									<a href="404.html" class="dropdown-item">
										404 Page

									</a>
								</div>
							</div>
							<a href="contact.html" class="nav-item nav-link">
								Contact

							</a>
						</div>
						<a href="" class="btn rounded-pill py-2 px-4 ms-3 d-none d-lg-block">
							Get Started

						</a>
					</div>
				</nav>
				
				<div class="container-xxl bg-primary hero-header">
					
				</div>
			</div>
			<!-- Navbar & Hero End -->

        <!-- Contact Start -->
        <div class="container-xxl py-5">
            <div class="container py-5 px-lg-5">
                <div class="wow fadeInUp" data-wow-delay="0.1s">
                    <p class="section-title text-secondary justify-content-center"><span></span>Posts<span></span></p>
                    <h1 class="text-center mb-5">Edit Post</h1>
                </div>
                <div class="row justify-content-center">
                    <div class="col-lg-7">
                        <div class="wow fadeInUp" data-wow-delay="0.3s">
                         {{ form_start(form , {'attr': {'class':'form-horizontal','novalidate':'novalidate','id': 'Form'}}) }}
                            
                                <div class="row g-3">
                                  





<div class="col-md-6">
    <div class="d-flex align-items-center">
    <span class="text-gray-700 dark:text-gray-400">Audience : </span>
        <label for="audience" class="block mt-4 text-sm mr-3">
            
        </label>
        <div class="flex-grow-1">
            {{ form_widget(form.audience, {'attr': {'class': 'form-select'}}) }}
            <span class="error-message">{{ form_errors(form.audience) }}</span>

        </div>
    </div>
</div>




<div class="col-md-6">
    <div class="d-flex align-items-center">
    <span class="text-gray-700 dark:text-gray-400">Date : </span>
        <label for="date" class="block mt-4 text-sm mr-3">
            
        </label>
        <div class="flex-grow-1">
            {{ form_widget(form.date, {'attr': {'class': 'form-control'}}) }}
        </div>
    </div>
</div>



<div class="col-12">
    <div class="form-floating" style="display: none;"> {#enlever style="display: none;" pour quelle soit displayed #}
        <label for="utilisateurInput" class="block text-sm"></label>
        {% set selectedUserId = form.utilisateur.vars.value %}
        {{ form_widget(form.utilisateur, {'id': 'utilisateurInput', 'attr': {'class': 'form-select', 'disabled': true}}) }}
        <input type="hidden" id="utilisateurHidden" name="post[utilisateur]" value="{{ selectedUserId }}">
        <span id="utilisateurError" class="text-xs" style="color: red;"></span>
        <span class="error-message">{{ form_errors(form.utilisateur) }}</span>

    </div>
</div>





<div class="col-12" style="display: none;"> {#enlever style="display: none;" pour quelle soit displayed #}
    <div class="d-flex align-items-center">
    <span class="text-gray-700 dark:text-gray-400">Reactions : </span>
        <label for="totalReactions" class="block mt-4 text-sm mr-3">
            
        </label>
        <div class="flex-grow-1">
            {{ form_widget(form.totalReactions, {'attr': {'class': 'form-control'}}) }}
        </div>
    </div>
</div>





<div class="col-12" style="display: none;">
    <div class="d-flex align-items-center">
    <span class="text-gray-700 dark:text-gray-400">Comments : </span>
        <label for="nbComments" class="block mt-4 text-sm mr-3">
            
        </label>
        <div class="flex-grow-1">
            {{ form_widget(form.nbComments, {'attr': {'class': 'form-control'}}) }}
        </div>
    </div>
</div>





                                   <div class="col-12">
    <div class="d-flex align-items-center">
    <span  class="text-gray-700 dark:text-gray-400">Description : </span>
        <label for="caption" class="block mt-4 text-sm mr-3">
            
        </label>
        <div class="flex-grow-1">
            {{ form_widget(form.caption, {'id': 'captionInput','attr': {'class': 'form-control'}}) }}
            <span id="captionError" class="text-xs text-red-600 dark:text-red-400"></span>
            <span class="error-message">{{ form_errors(form.caption) }}</span>
           


        </div>
    </div>
</div>








 
	<div class="col-12">
    <div class="card mb-3">
        <div class="card-body">
            <label class="block text-sm">Image</label>
            <div class="px-4 py-3 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800">
                <div class="relative flex items-center">
                    <!-- Bouton Import -->
                    <button type="button" class="btn btn-primary w-5 py-2" onclick="document.getElementById('fileInput').click();">
                        Import
                    </button>

                    <!-- Input de sélection de fichier -->
                    {{ form_widget(form.image, {'id': 'fileNameInput', 'attr': {'class': 'w-full pl-2 py-1 text-sm dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input', 'title': ''}}) }}

                    <!-- Input caché de type file -->
                    <input type="file" id="fileInput" class="hidden" onchange="updateFileName(event)"/>

                    <!-- Script pour mettre à jour le nom du fichier sélectionné -->
                    <script>
                        function updateFileName(event) {
                            const input = document.getElementById('fileNameInput');
                            input.value = event.target.files[0].name;
                            input.placeholder = '';
                        }
                    </script>
                </div>
                <span id="imageError" class="text-xs text-red-600 dark:text-red-400"></span>
                <span class="error-message">{{ form_errors(form.image) }}</span>

            </div>
        </div>
    </div>
</div>
<style>
    /* Masquer le texte du bouton */
    #fileInput::-webkit-file-upload-button {
        visibility: hidden;
    }
</style>








                                    <div class="col-12">
                                        <button class="btn btn-primary w-100 py-3" type="submit">{{ button_label|default(' + Edit') }}</button>
                                    </div>
                                </div>

                                 {{ form_end(form) }}
                            
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Contact End -->
        {#
    <script>
		// Fonction de validation du formulaire
function validateForm() {



let nom = document.getElementById('captionInput').value.trim();
let nomError = document.getElementById('captionError');
let image = document.getElementById('fileNameInput').value.trim();
let imageError = document.getElementById('imageError');
// Expression régulière pour valider que le champ ne contient que des lettres et des espaces
let letterOnlyRegex = /^[A-Za-z\s]+$/;


if (nom === '') {
nomError.textContent = 'Description is required';
return false;
} else if (! letterOnlyRegex.test(nom)) {
nomError.textContent = 'Description doit contenir uniquement des lettres';
return false;
} else {
nomError.textContent = '';
}


if (image === '') {
imageError.textContent = 'Image is required';
return false;
} else {
imageError.textContent = '';
}



// Si toutes les validations passent, retourne true pour soumettre le formulaire
return true;
}

// Attachez l'événement de soumission du formulaire à la fonction de validation
document.getElementById('Form').addEventListener('submit', function (event) {
if (! validateForm()) { // Empêche la soumission du formulaire si la validation échoue
event.preventDefault();
}
});
	</script>
     #}
      <style>
	.error-message {
    color: red;
}
</style>

       
{% endblock %}